name: Fly Deploy

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
    
jobs:
  setup:
    name: Setup Backend, Build Frontend and Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Frontend Dependencies
        run: npm ci
        working-directory: frontend

      - name: Run Unit Tests
        run: npm run test:unit
        working-directory: frontend

      - name: Build Frontend (Development)
        run: npm run build:localdev
        working-directory: frontend

      - name: Install Backend Dependencies
        run: npm ci
        working-directory: backend

      - name: Copy secrets to .env file
        env:
          BREVO_API_KEY: ${{ secrets.BREVO_API_KEY }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          DATABASE_TOKEN: ${{ secrets.DATABASE_TOKEN }}
        run: |
          cd backend
          echo "JWT_SECRET=$JWT_SECRET" > .env
          echo "BREVO_API_KEY=$BREVO_API_KEY
            DATABASE_URL=libsql://bookworms-szankdav.turso.io
            DATABASE_TOKEN=$DATABASE_TOKEN
            PAGE_URL=https://bookworms.fly.dev/" > .env.production

      - name: Start Backend Server
        run: npm run start &
        working-directory: backend

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
        working-directory: frontend 

      - name: Run Playwright Tests
        run: npm run test:e2e:localdev
        working-directory: frontend

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: frontend/playwright-report/
          retention-days: 30

  deploy:
    name: Deploy Backend Server
    runs-on: ubuntu-latest
    needs: [setup]  # Ensures 'deploy' job runs after 'setup' and 'test' jobs
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Frontend Dependencies
        run: npm ci
        working-directory: frontend

      - name: Build Frontend (Production)
        run: npm run build:prod
        working-directory: frontend

      - name: Set up Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master
        
      - name: Deploy Backend
        run: |
          cd backend  
          flyctl deploy --no-cache --build-arg NODE_ENV=production
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}